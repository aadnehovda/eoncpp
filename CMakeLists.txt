cmake_minimum_required(VERSION 3.12 FATAL_ERROR)
project(Eon LANGUAGES CXX)
set(VERSION "0.1.1")
message(STATUS "Eon C++ v${VERSION}")

# Configuration
set(EON_SOURCES_DIR "${CMAKE_CURRENT_SOURCE_DIR}" CACHE PATH "The directory containing the source files")
set(EON_INSTALL_DIR "${CMAKE_INSTALL_PREFIX}" CACHE PATH "Where to install")
set(EON_LIBRARY_DIR "lib" CACHE STRING "Where to install libraries under EON_INSTALL_DIR")
set(EON_INCLUDE_DIR "include" CACHE STRING "Where to install headers under EON_INSTALL_DIR")
set(EON_TESTS_DIR "eontests" CACHE PATH "Where to install tests under EON_INSTALL_DIR")
set(CMAKE_DEBUG_POSTFIX "_d" CACHE STRING "Postfix to debug builds")
set(EON_BUILD_TESTS ON CACHE BOOL "Include tests in build?")
set(EON_BUILD_PATH ON CACHE BOOL "Include the Path package")
set(EON_BUILD_FILE ON CACHE BOOL "Include the File package")
set(EON_BUILD_TOKENIZER ON CACHE BOOL "Build the Tokenizer package")
set(EON_BUILD_REGEX ON CACHE BOOL "Build the Regex package")
set(EON_BUILD_TUPLE ON CACHE BOOL "Build the Tuple package")
set(EON_BUILD_EOF ON CACHE BOOL "Build the Eon Object Format package - EOF")
set(EON_BUILD_EXPRESSION ON CACHE BOOL "Build the Eon Expression package")
set(EON_BUILD_PARSER ON CACHE BOOL "Build the Eon Parser package")

if(CMAKE_BUILD_TYPE STREQUAL "Debug")
	add_definitions(-D_DEBUG)
endif()
set(CMAKE_CXX_STANDARD 17)
add_definitions(-D_SILENCE_CXX17_CODECVT_HEADER_DEPRECATION_WARNING)

if(EON_BUILD_TESTS)
	add_subdirectory(eontest)
endif()
add_subdirectory(eonstring)
add_subdirectory(eonname)
add_subdirectory(eonexcept)
add_subdirectory(eonhex)
if(EON_BUILD_PATH OR EON_BUILD_FILE OR EON_EOF)
	add_subdirectory(eonpath)
endif()
if(EON_BUILD_FILE OR EON_EOF)
	add_subdirectory(eonfile)
endif()
if(EON_BUILD_TOKENIZER OR EON_BUILD_REGEX)
	add_subdirectory(eonsource)
	add_subdirectory(eontokenizer)
endif()
if(EON_BUILD_REGEX)
	add_subdirectory(eonregex)
endif()
if(EON_BUILD_TUPLE OR EON_BUILD_EOF)
	add_subdirectory(eontuple)
endif()
if(EON_BUILD_EOF)
	add_subdirectory(eonof)
endif()
if(EON_BUILD_EXPRESSION OR EON_BUILD_EOF OR EON_BUILD_TUPLE)
	add_subdirectory(eonexpression)
endif()
if(EON_BUILD_PARSER)
	add_subdirectory(eondoc)
	add_subdirectory(eonparser)
endif()
